set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'erikw/tmux-powerline'

# Enable mouse scolling
set -g mouse on

# Sane mouse scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Shutup tmux + mutt
set -g bell-action none
set -g visual-bell off

unbind C-b
set-option -g prefix C-x
set -g status-style 'bg=#333333 fg=#5eacd3'

# Support ^arrows
set-window-option -g xterm-keys on

# act like vim
setw -g mode-keys vi

# Pane resizing
bind ( resize-pane -L 5
bind ) resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# Set the time in milliseconds for which tmux waits after
# an escape is input to determine if it is part of a function
# or meta key sequences.  The default is 500 milliseconds.
set -sg escape-time 0

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set -g pane-base-index 1
setw -g base-index 1
setw -g pane-base-index 1

# Make sure tmux reports focus changes for vitality.vim
set -g focus-events on

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Automatically set window title
set-window-option -g automatic-rename on

# increase scrollback lines
set -g history-limit 99999

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

# Swap windows with Shift-Control vim-arrows
bind-key -n C-S-h swap-window -t -1
bind-key -n C-S-l swap-window -t +1

# wezterm zenmode integration
set-option -g allow-passthrough on

# tmux-navigator integration

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -r f run-shell "tmux neww ~/.bin/tmux-sessionizer"

bind-key -r S run-shell "~/.bin/tmux-sessionizer ~/src/loop-sdk"
bind-key -r D run-shell "~/.bin/tmux-sessionizer ~/src/dotfiles"

# vim-like pane switching
bind -r z last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# nvim told me to do this, enable true color
set-option -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-256color:Tc'
set-option -sa terminal-features ',alacritty:Tc'

run '~/.tmux/plugins/tpm/tpm'
